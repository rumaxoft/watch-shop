version: "3.8"
services:
  database:
    image: mongo:5
    container_name: mongodb
    env_file:
      - ./.dev.env
    restart: unless-stopped
    logging:
      driver: none
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGODB_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_PASSWORD}
    ports:
      - ${MONGODB_LOCAL_PORT}:${MONGODB_DOCKER_PORT}
    volumes:
      - db:/data/db
  backend:
    depends_on:
      - database
    build:
      context: ./backend
    container_name: backend
    env_file:
      - ./.dev.env
    restart: unless-stopped
    ports:
      - ${NODE_LOCAL_PORT}:${NODE_DOCKER_PORT}
    volumes:
      - ./backend/uploads:/var/www/watch-shop/backend/uploads
    environment:
      - DB_HOST=mongodb
      - DB_USER=${MONGODB_USER}
      - DB_PASSWORD=${MONGODB_PASSWORD}
      - DB_NAME=${MONGODB_DATABASE}
      - DB_PORT=${MONGODB_LOCAL_PORT}
      - NODE_DOCKER_PORT=${NODE_DOCKER_PORT}
      - API_URL=${API_URL}
      - CLIENT_URL_SERVER=frontend:8080
      - CLIENT_URL_BROWSER=stage.rumaxoft.com
      - JWT_SECRET=${JWT_SECRET}
      - MAIL_HOST=${MAIL_HOST}
      - MAIL_PORT=${MAIL_PORT}
      - MAIL_USER=${MAIL_USER}
      - MAIL_PASSWORD=${MAIL_PASSWORD}
    stdin_open: true
    tty: true
    command: /bin/sh -c "npm run data:import && npm run start"
  frontend:
    depends_on:
      - backend
    container_name: frontend
    restart: unless-stopped
    build:
      context: ./frontend
    ports:
       - ${FRONTEND_LOCAL_PORT}:${FRONTEND_DOCKER_PORT}
    environment:
      - NUXT_PORT=${FRONTEND_DOCKER_PORT}
      - API_URL_SERVER=backend:5050/apiv1
      - API_URL_BROWSER=stage.rumaxoft.com/apiv1
    stdin_open: true
    tty: true
    command: /bin/sh -c "npm run build && npm run start"
  nginx:
    depends_on:
      - certbot
    image: nginx:latest
    container_name: proxy_nginx
    restart: always
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./logs:/var/log/nginx
      - ./certbot/www:/var/www/certbot/:ro
      - ./certbot/conf/:/etc/letsencrypt/:ro
    stdin_open: true
    tty: true
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
  certbot:
    image: certbot/certbot:latest
    volumes:
      - ./certbot/www/:/var/www/certbot/:rw
      - ./certbot/conf/:/etc/letsencrypt/:rw
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
volumes:
  db:
# networks:
  # backend:
  # mongodb:
